name: release-packages

on:
  push:
    tags: ["v*"]

env:
  REGISTRY_SERVER_ADDRESS: ghcr.io/miracleeverywhere/dst-management-platform-api

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            output: dmp.tgz
            build_flags: ""
          - os: darwin
            arch: arm64
            output: dmp_darwin.tgz
            build_flags: "CGO_ENABLED=0"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.23.1'

      - name: Build binary
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} ${{ matrix.build_flags }} go build -o ${{ env.BINARY_NAME }} ./...

      - name: Package binary
        run: |
          tar czf ${{ matrix.output }} ${{ env.BINARY_NAME }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.output }}
          path: ${{ matrix.output }}

  build-image:
    needs: build-binaries
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}

    steps:
      - uses: actions/checkout@v4

      - name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_SERVER_ADDRESS }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./docker/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-release:
    needs: [build-binaries, build-image]
    runs-on: ubuntu-latest

    steps:
      - name: release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          draft: true
          token: ${{ secrets.GH_TOKEN }}
          files: |
            release/*.tgz