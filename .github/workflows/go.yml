name: release-packages

on:
  push:
    tags: ["v*"]

env:
  REGISTRY_SERVER_ADDRESS: ghcr.io/miracleeverywhere/dst-management-platform-api

jobs:
  build-binary:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest ]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Go 1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1

      - name: build-mac
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        if: matrix.os == 'macos-latest'
        run: CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o ./dmp && tar zcf dmp_darwin.tgz dmp

      - name: build-linux
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        if: matrix.os == 'ubuntu-latest'
        run: go build -o ./dmp && tar zcf dmp.tgz dmp

      - name: release
        uses: softprops/action-gh-release@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          draft: true
          token: ${{ secrets.GH_TOKEN }}
          files: |
            ./*.tgz

  build-image:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PACKAGE_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY_SERVER_ADDRESS }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          file: ./docker/Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }},${{ env.REGISTRY_SERVER_ADDRESS }}:${{ env.TAG }}
          labels: ${{ steps.meta.outputs.labels }}
